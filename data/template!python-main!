#!/bin/env python

"""Brief one-line description of the script.

Following paragraphs provide detailed description of the module, its
contents and usage. This is a template module (or module template)
which is used by developers to create new Python scripts.
This is the "executable module" as opposed to library module.
"""

from __future__ import absolute_import, division, print_function

__all__ = [...]

#--------------------------------
#  Imports of standard modules --
#--------------------------------
from argparse import ArgumentParser
import logging
import os
import sys

#-----------------------------
# Imports for other modules --
#-----------------------------

#---------------------
# Local definitions --
#---------------------

def _configLogger(verbosity):
    """ configure logging based on verbosity level """

    levels = {0: logging.WARNING, 1: logging.INFO, 2: logging.DEBUG}
    logfmt = "%(asctime)s [%(levelname)s] %(name)s: %(message)s"

    logging.basicConfig(level=levels.get(verbosity, logging.DEBUG), format=logfmt)


#----------------------------
#  Main application method --
#----------------------------

def main():

    descr = 'One-line application description.'
    parser = ArgumentParser(description=descr)
    parser.add_argument('-v', '--verbose', dest='verbose', action='count', default=0,
                        help='More verbose output, can use several times.')
    # add more command line options
    args = parser.parse_args()

    # configure logging
    _configLogger(args.verbose)

    #
    #  Application logic goes here
    #

#
#  run application when imported as a main module
#
if __name__ == "__main__":
    rc = main()
    sys.exit(rc)
